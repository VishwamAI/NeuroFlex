name: NeuroFlex CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov sphinx twine pytest-html
    - name: Run tests with pytest
      run: |
        pytest tests/ --durations=0 --cov=NeuroFlex --cov-report=xml --html=test_report.html --self-contained-html
    - name: Generate skipped tests report
      run: |
        python -c "
        import json
        with open('test_report.json', 'w') as f:
          json.dump({
            'skipped_tests': {
              'Edge AI Optimization': ['test_quantize_model', 'test_self_heal', 'test_optimize'],
              'Bioinformatics Integration': ['test_analyze_tree_empty', 'test_create_tree_valid_newick', 'test_render_tree', 'test_analyze_tree', 'test_analyze_sequence_invalid', 'test_calculate_diversity_valid', 'test_calculate_diversity_invalid', 'test_align_sequences_valid', 'test_align_sequences_invalid'],
              'Synthetic Biology Insights': ['test_predict_protein_function', 'test_simulate_metabolic_pathway'],
              'AlphaFold Integration': ['test_setup_model', 'test_prepare_features', 'test_predict_structure', 'test_get_plddt_scores', 'test_get_predicted_aligned_error'],
              'ART Integration': ['test_set_model', 'test_generate_adversarial_examples', 'test_apply_defense', 'test_adversarial_training', 'test_evaluate_robustness'],
              'Google Integration': ['test_create_cnn_model', 'test_create_rnn_model', 'test_create_transformer_model', 'test_xla_compilation', 'test_integrate_tensorflow_model', 'test_input_shape_handling', 'test_num_classes_handling', 'test_error_handling']
            }
          }, f)
        "
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
    - uses: actions/upload-artifact@v2
      with:
        name: test-report
        path: test_report.html
    - uses: actions/upload-artifact@v2
      with:
        name: skipped-tests-report
        path: test_report.json

  build-docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install sphinx
    - name: Build documentation
      run: |
        sphinx-build -b html docs/source docs/build

  publish:
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
