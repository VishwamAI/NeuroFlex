name: NeuroFlex CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install specific versions of numerical computation packages
          pip install --no-deps numpy==1.23.5 scipy==1.9.0 jax==0.4.13 jaxlib==0.4.13 flax==0.6.10 optax==0.1.5
      - name: Create necessary directories
        run: |
          mkdir -p ${{ github.workspace }}/data
          mkdir -p ${{ github.workspace }}/path/to/save
      - name: Set ALPHAFOLD_PATH environment variable
        run: echo "ALPHAFOLD_PATH=${{ github.workspace }}/alphafold" >> $GITHUB_ENV
      - name: Run tests
        run: |
          pytest tests/ --disable-warnings
        env:
          NEUROFLEX_DATA_DIR: ${{ github.workspace }}/data
          NEUROFLEX_SAVE_DIR: ${{ github.workspace }}/path/to/save
          ALPHAFOLD_PATH: ${{ env.ALPHAFOLD_PATH }}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build package
        run: |
          pip install build
          python -m build
      - name: Check dist folder
        run: |
          ls -l dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Verify distribution files
        run: |
          ls -l dist/
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/* --skip-existing

  update_workflow:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Update workflow
        run: |
          echo "Updating workflow in GitHub"
          # Add any additional steps needed to update the workflow
