============================= test session starts ==============================
platform linux -- Python 3.12.5, pytest-8.3.2, pluggy-1.5.0 -- /home/ubuntu/.pyenv/versions/3.12.5/bin/python3.12
cachedir: .pytest_cache
rootdir: /home/ubuntu/NeuroFlex
configfile: pytest.ini
collecting ... collected 140 items

test_advanced_math_solving.py::TestAdvancedMathSolving::test_consciousness_simulation FAILED [  0%]

=================================== FAILURES ===================================
____________ TestAdvancedMathSolving.test_consciousness_simulation _____________

features = [64, 32], output_dim = 10, sentence_piece_model_path = None

    def create_advanced_math_solving(features: List[int], output_dim: int, sentence_piece_model_path: Optional[str] = None) -> AdvancedMathSolving:
        try:
            solver = AdvancedMathSolving(features=features, output_dim=output_dim, sentence_piece_model_path=sentence_piece_model_path)
>           if solver.generative_ai is None or solver.consciousness is None:

../src/NeuroFlex/advanced_math_solving.py:150: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = AdvancedMathSolving(
    # attributes
    features = [64, 32]
    output_dim = 10
    sentence_piece_model_path = None
)
name = 'generative_ai'

    def __getattr__(self, name: str) -> Any:
      """Call setup() before getting any setup-defined attributes."""
      # We don't want to return anything for python copy / pickle methods.
      if name in _UNDEFINED_COPY_PICKLE_METHODS:
        raise AttributeError()
      self._try_setup()
      if name in self.__dict__:
        return self.__dict__[name]
      else:
        msg = f'"{self.__class__.__name__}" object has no attribute "{name}".'
        if self.scope is None:
          msg += (
            f' If "{name}" is defined in \'.setup()\', remember these fields '
            "are only accessible from inside 'init' or 'apply'."
          )
>       raise AttributeError(msg)
E       AttributeError: "AdvancedMathSolving" object has no attribute "generative_ai". If "generative_ai" is defined in '.setup()', remember these fields are only accessible from inside 'init' or 'apply'.

../../.pyenv/versions/3.12.5/lib/python3.12/site-packages/flax/linen/module.py:1304: AttributeError

During handling of the above exception, another exception occurred:

self = <test_advanced_math_solving.TestAdvancedMathSolving testMethod=test_consciousness_simulation>

>   ???

/home/ubuntu/NeuroFlex/NeuroFlex/tests/test_advanced_math_solving.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

features = [64, 32], output_dim = 10, sentence_piece_model_path = None

    def create_advanced_math_solving(features: List[int], output_dim: int, sentence_piece_model_path: Optional[str] = None) -> AdvancedMathSolving:
        try:
            solver = AdvancedMathSolving(features=features, output_dim=output_dim, sentence_piece_model_path=sentence_piece_model_path)
            if solver.generative_ai is None or solver.consciousness is None:
                raise ValueError("Failed to initialize GenerativeAI or ConsciousnessSimulation components")
            return solver
        except Exception as e:
            logging.error(f"Failed to create AdvancedMathSolving instance: {str(e)}")
            if isinstance(e, ValueError):
                raise
>           raise ValueError(f"AdvancedMathSolving initialization failed: {str(e)}")
E           ValueError: AdvancedMathSolving initialization failed: "AdvancedMathSolving" object has no attribute "generative_ai". If "generative_ai" is defined in '.setup()', remember these fields are only accessible from inside 'init' or 'apply'.

../src/NeuroFlex/advanced_math_solving.py:157: ValueError
------------------------------ Captured log call -------------------------------
ERROR    root:advanced_math_solving.py:154 Failed to create AdvancedMathSolving instance: "AdvancedMathSolving" object has no attribute "generative_ai". If "generative_ai" is defined in '.setup()', remember these fields are only accessible from inside 'init' or 'apply'.
=========================== short test summary info ============================
FAILED test_advanced_math_solving.py::TestAdvancedMathSolving::test_consciousness_simulation
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
======================== 1 failed, 2 warnings in 20.17s ========================
